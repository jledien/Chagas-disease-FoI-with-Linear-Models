# plot(Month, DVC, pch = 16, xlab = "Month", ylab = "DVC")
#
# lines(xMonth, ymonth, col = "red", lwd = 2)
max_DVC <- max(df_DVC$DVC)
fit_mod <- data.frame(observed = seq(0,max_DVC),
median = rep(max_DVC+1),
lower = rep(max_DVC+1),
upper = rep(max_DVC+1))
View(fit_mod)
fit_mod <- data.frame(observed = seq(0,max_DVC),
median = rep(0,max_DVC+1),
lower = rep(0,max_DVC+1),
upper = rep(0,max_DVC+1))
View(fit_mod)
plot(df_DVC$DVC, y_hat)
lines(c(0,1e3),c(0,1e3))
# plot(Month, DVC, pch = 16, xlab
i=1
f <- which(df_DVC$DVC == fit_mod$observed[i])
View(df_DVC)
y_hat[f]
quantile(y_hat[f],c(0.5,.25,.75))
for(i in 1:nrow(fit_mod)){
f <- which(df_DVC$DVC == fit_mod$observed[i])
fit_mod[i,2:4] <- quantile(y_hat[f],c(0.5,.25,.75))
}
f <- which(is.na(fit_mod$median))
fit_mod <- fit_mod[-f,]
# plot fit vs. observed
plot(fit_mod$observed, fit_mod$median,type = 'l')
# plot fit vs. observed
plot(fit_mod$observed, fit_mod$median,
type = 'l',col = 'blue3',bty = 'n',lwd = 2,
xlim = c(0,40),ylim = c(0,40))
plot(fit_mod$observed, fit_mod$median,
type = 'l',col = 'blue3',bty = 'n',lwd = 2,
xlim = c(0,40),ylim = c(0,40))
lines(c(0,50),c(0,50),col='red3',lty=2)
Hmisc::errbar(x = fit_mod$observed,
y = fit_mod$median,
yplus = fit_mod$upper,
yminus = fit_mod$lower,
col = 'blue3',bty = 'n',lwd = 2,
xlim = c(0,40),ylim = c(0,40))
lines(c(0,50),c(0,50),col='red3',lty=2)
plot(df_DVC$DVC, y_hat)
lines(c(0,1e3),c(0,1e3))
# plot(Month, DVC, pch = 16, xlab = "Month", ylab = "DVC")
#
# lines(xMonth, ymonth, col = "red", lwd = 2)
max_DVC <- max(df_DVC$DVC)
fit_mod <- data.frame(observed = seq(0,max_DVC),
median = rep(0,max_DVC+1),
lower = rep(0,max_DVC+1),
upper = rep(0,max_DVC+1))
for(i in 1:nrow(fit_mod)){
f <- which(df_DVC$DVC == fit_mod$observed[i])
fit_mod[i,2:4] <- quantile(y_hat[f],c(0.5,.25,.75))
}
f <- which(is.na(fit_mod$median))
fit_mod <- fit_mod[-f,]
# plot fit vs. observed
Hmisc::errbar(x = fit_mod$observed,
y = fit_mod$median,
yplus = fit_mod$upper,
yminus = fit_mod$lower,
col = 'blue3',bty = 'n',lwd = 1,
xlim = c(0,40),ylim = c(0,40))
lines(c(0,50),c(0,50),col='red3',lty=2)
plot(df_DVC$DVC, y_hat)
lines(c(0,1e3),c(0,1e3))
# plot(Month, DVC, pch = 16, xlab = "Month", ylab = "DVC")
#
# lines(xMonth, ymonth, col = "red", lwd = 2)
max_DVC <- max(df_DVC$DVC)
fit_mod <- data.frame(observed = seq(0,max_DVC),
median = rep(0,max_DVC+1),
lower = rep(0,max_DVC+1),
upper = rep(0,max_DVC+1))
for(i in 1:nrow(fit_mod)){
f <- which(df_DVC$DVC == fit_mod$observed[i])
fit_mod[i,2:4] <- quantile(y_hat[f],c(0.5,.25,.75))
}
f <- which(is.na(fit_mod$median))
fit_mod <- fit_mod[-f,]
# plot fit vs. observed
Hmisc::errbar(x = fit_mod$observed,
y = fit_mod$median,
yplus = fit_mod$upper,
yminus = fit_mod$lower,
col = 'blue3',bty = 'n',lwd = 1.5,errbar.col = 'blue3',
xlim = c(0,40),ylim = c(0,40))
lines(c(0,50),c(0,50),col='red3',lty=2)
plot(df_DVC$DVC, y_hat)
lines(c(0,1e3),c(0,1e3))
# plot(Month, DVC, pch = 16, xlab = "Month", ylab = "DVC")
#
# lines(xMonth, ymonth, col = "red", lwd = 2)
max_DVC <- max(df_DVC$DVC)
fit_mod <- data.frame(observed = seq(0,max_DVC),
median = rep(0,max_DVC+1),
lower = rep(0,max_DVC+1),
upper = rep(0,max_DVC+1))
for(i in 1:nrow(fit_mod)){
f <- which(df_DVC$DVC == fit_mod$observed[i])
fit_mod[i,2:4] <- quantile(y_hat[f],c(0.5,.025,.975))
}
f <- which(is.na(fit_mod$median))
fit_mod <- fit_mod[-f,]
# plot fit vs. observed
Hmisc::errbar(x = fit_mod$observed,
y = fit_mod$median,
yplus = fit_mod$upper,
yminus = fit_mod$lower,
col = 'blue3',bty = 'n',lwd = 1.5,errbar.col = 'blue3',
xlim = c(0,40),ylim = c(0,40))
lines(c(0,50),c(0,50),col='red3',lty=2)
fit_mod <- data.frame(observed = seq(0,max_DVC),
median = rep(0,max_DVC+1),
lower = rep(0,max_DVC+1),
upper = rep(0,max_DVC+1),mean = NA)
plot(df_DVC$DVC, y_hat)
lines(c(0,1e3),c(0,1e3))
# plot(Month, DVC, pch = 16, xlab = "Month", ylab = "DVC")
#
# lines(xMonth, ymonth, col = "red", lwd = 2)
max_DVC <- max(df_DVC$DVC)
fit_mod <- data.frame(observed = seq(0,max_DVC),
median = rep(0,max_DVC+1),
lower = rep(0,max_DVC+1),
upper = rep(0,max_DVC+1),
mean = NA)
for(i in 1:nrow(fit_mod)){
f <- which(df_DVC$DVC == fit_mod$observed[i])
fit_mod[i,2:4] <- quantile(y_hat[f],c(0.5,.025,.975))
fit_mod$mean <- mean(y_hat[f])
}
f <- which(is.na(fit_mod$median))
fit_mod <- fit_mod[-f,]
# plot fit vs. observed
Hmisc::errbar(x = fit_mod$observed,
y = fit_mod$mean,
yplus = fit_mod$upper,
yminus = fit_mod$lower,
col = 'blue3',bty = 'n',lwd = 1.5,errbar.col = 'blue3',
xlim = c(0,40),ylim = c(0,40))
lines(c(0,50),c(0,50),col='red3',lty=2)
plot(df_DVC$DVC, y_hat)
lines(c(0,1e3),c(0,1e3))
# plot(Month, DVC, pch = 16, xlab = "Month", ylab = "DVC")
#
# lines(xMonth, ymonth, col = "red", lwd = 2)
max_DVC <- max(df_DVC$DVC)
fit_mod <- data.frame(observed = seq(0,max_DVC),
median = rep(0,max_DVC+1),
lower = rep(0,max_DVC+1),
upper = rep(0,max_DVC+1),
mean = NA)
for(i in 1:nrow(fit_mod)){
f <- which(df_DVC$DVC == fit_mod$observed[i])
fit_mod[i,2:4] <- quantile(y_hat[f],c(0.5,.025,.975))
fit_mod$mean[i] <- mean(y_hat[f])
}
f <- which(is.na(fit_mod$median))
fit_mod <- fit_mod[-f,]
# plot fit vs. observed
Hmisc::errbar(x = fit_mod$observed,
y = fit_mod$mean,
yplus = fit_mod$upper,
yminus = fit_mod$lower,
col = 'blue3',bty = 'n',lwd = 1.5,errbar.col = 'blue3',
xlim = c(0,40),ylim = c(0,40))
lines(c(0,50),c(0,50),col='red3',lty=2)
plot(df_DVC$DVC, y_hat)
lines(c(0,1e3),c(0,1e3))
# plot(Month, DVC, pch = 16, xlab = "Month", ylab = "DVC")
#
# lines(xMonth, ymonth, col = "red", lwd = 2)
max_DVC <- max(df_DVC$DVC)
fit_mod <- data.frame(observed = seq(0,max_DVC),
median = rep(0,max_DVC+1),
lower = rep(0,max_DVC+1),
upper = rep(0,max_DVC+1),
mean = NA)
for(i in 1:nrow(fit_mod)){
f <- which(df_DVC$DVC == fit_mod$observed[i])
fit_mod[i,2:4] <- quantile(y_hat[f],c(0.5,.025,.975))
fit_mod$mean[i] <- mean(y_hat[f])
}
f <- which(is.na(fit_mod$median))
fit_mod <- fit_mod[-f,]
# plot fit vs. observed
Hmisc::errbar(x = fit_mod$observed,
y = fit_mod$mean,
yplus = fit_mod$upper,
yminus = fit_mod$lower,
col = 'blue3',bty = 'n',lwd = 1.5,errbar.col = 'blue3',
xlim = c(0,40),ylim = c(0,40))
lines(c(0,50),c(0,50),col='red3',lty=2)
# plot fit vs. observed
Hmisc::errbar(x = fit_mod$observed,
y = fit_mod$median,
yplus = fit_mod$upper,
yminus = fit_mod$lower,
col = 'blue3',bty = 'n',lwd = 1.5,errbar.col = 'blue3',
xlim = c(0,40),ylim = c(0,40))
lines(c(0,50),c(0,50),col='red3',lty=2)
plot(df_DVC$DVC, y_hat)
lines(c(0,1e3),c(0,1e3))
# plot(Month, DVC, pch = 16, xlab = "Month", ylab = "DVC")
#
# lines(xMonth, ymonth, col = "red", lwd = 2)
max_DVC <- max(df_DVC$DVC)
fit_mod <- data.frame(observed = seq(0,max_DVC),
median = rep(0,max_DVC+1),
lower = rep(0,max_DVC+1),
upper = rep(0,max_DVC+1),
mean = NA)
for(i in 1:nrow(fit_mod)){
f <- which(df_DVC$DVC == fit_mod$observed[i])
fit_mod[i,2:4] <- quantile(y_hat[f],c(0.5,.025,.975))
fit_mod$mean[i] <- mean(y_hat[f])
}
f <- which(is.na(fit_mod$median))
fit_mod <- fit_mod[-f,]
# plot fit vs. observed
Hmisc::errbar(x = fit_mod$observed,
y = fit_mod$mean,
yplus = fit_mod$upper,
yminus = fit_mod$lower,
col = 'blue3',bty = 'n',lwd = 1.5,errbar.col = 'blue3',
xlim = c(0,40),ylim = c(0,40))
lines(c(0,50),c(0,50),col='red3',lty=2)
df_DVC$predicted_DVC <- y_hat
View(df_DVC)
df_DVC_full$predicted_DVC <- y_hat
View(df_DVC_full)
library(plyr)
library(ggplot2)
library(readxl)
library(here)
# library(boot)
# library(carData)
# library(car)
library(tidyverse)
# library(stringr)
library(dplyr)
library(gridExtra)
# library(LogisticDx)
df_DVC <- read_csv("RData/df_DVC.csv")
df_DVC_full <- read_csv("RData/df_DVC.csv")
names(df_DVC)
# df_DVC=subset(df_DVC,select = -c(X1,Square_no,Year,A_traffic_var,B_traffic_var,M_traffic_var,A_var_coefficient, B_var_coefficient))
# df_DVC=subset(df_DVC,select = -c(lon,lat,Land_cover,Percentage_landcover,X_centr,Y_centr))
df_DVC=subset(df_DVC,select = -c(X1,Square_no,A_traffic_var,B_traffic_var,M_traffic_var,A_var_coefficient, B_var_coefficient))
df_DVC=subset(df_DVC,select = -c(lon,lat,Land_cover,Percentage_landcover,X_centr,Y_centr))
df_DVC$DVC[is.na(df_DVC$DVC)] <- 0
# unique(df_DVC_full$Square_no[which(is.na(df_DVC$rainfall))])
f_keep_Climate <- which(!is.na(df_DVC$rainfall)) # no climate data
df_DVC <- df_DVC[f_keep_Climate,]
#
# df_DVC[df_DVC == 0] <- NA
#
# df_DVC[df_DVC == 0.000] <- NA
#
# df_DVC[df_DVC == 0.0000] <- NA
MOD.1 <- glm(DVC ~ Amount_A+Amount_B+Amount_M+sunrise+
sunset+rainfall+Year+
tempmax+tempmin+
A_traffic_pred+B_traffic_pred+M_traffic_pred+
factor(Month),
data = df_DVC, family = "poisson")
summary(MOD.1)
range(df_DVC$Month)
y_hat <- predict(MOD.1, type="response")
plot(df_DVC$DVC, y_hat)
plot(df_DVC$DVC, y_hat)
lines(c(0,1e3),c(0,1e3))
# plot(Month, DVC, pch = 16, xlab = "Month", ylab = "DVC")
#
# lines(xMonth, ymonth, col = "red", lwd = 2)
max_DVC <- max(df_DVC$DVC)
fit_mod <- data.frame(observed = seq(0,max_DVC),
median = rep(0,max_DVC+1),
lower = rep(0,max_DVC+1),
upper = rep(0,max_DVC+1),
mean = NA)
for(i in 1:nrow(fit_mod)){
f <- which(df_DVC$DVC == fit_mod$observed[i])
fit_mod[i,2:4] <- quantile(y_hat[f],c(0.5,.025,.975))
fit_mod$mean[i] <- mean(y_hat[f])
}
f <- which(is.na(fit_mod$median))
fit_mod <- fit_mod[-f,]
# plot fit vs. observed
Hmisc::errbar(x = fit_mod$observed,
y = fit_mod$mean,
yplus = fit_mod$upper,
yminus = fit_mod$lower,
col = 'blue3',bty = 'n',lwd = 1.5,errbar.col = 'blue3',
xlim = c(0,40),ylim = c(0,40))
lines(c(0,50),c(0,50),col='red3',lty=2)
df_DVC$predicted_DVC <- y_hat
df_DVC_full$predicted_DVC <- NA
df_DVC_full$predicted_DVC[f_keep_Climate] <- y_hat
View(df_DVC_full)
View(df_DVC)
y_hat <- predict(MOD.1, type="response")
y_hat0 <- predict(MOD.1, type="link",se.fit = TRUE)
y_hat0$fitfit[1:10]
y_hat0$fit[1:10]
y_hat2 <- exp(y_hat0$fit)
y_hat2[1:10]
y_hat[1:10]
range(df_DVC$Month)
y_hat <- predict(MOD.1, type="response")
y_hat0 <- predict(MOD.1, type="link",se.fit = TRUE)
y_hat2 <- exp(y_hat0$fit)
y_hat2_lower <- exp(y_hat0$fit - 1.96*y_hat0$se.fit)
y_hat2_upper <- exp(y_hat0$fit + 1.96*y_hat0$se.fit)
plot(df_DVC$DVC, y_hat)
y_hat2[1:15]
y_hat2[1:5]
y_hat2_lower[1:5]
y_hat2_upper[1:5]
library(plyr)
library(ggplot2)
library(readxl)
library(here)
library(tidyverse)
library(stringr)
library(dplyr)
library(gridExtra)
# loading library
library(knitr)
opts_chunk$set(collapse = TRUE)
opts_chunk$set(fig.path='figs/', fig.keep='high',
dev=c('png'), fig.width=9, fig.height=6, cache=FALSE,
tidy=FALSE, warning=FALSE, fig.show="asis"
)
df_DVC <- read_csv("Rdata/df_DVC.csv")
plot(df_DVC$Amount_A, df_DVC$DVC, main = "Amount A road impacting DVC",
xlab = "Amount of A road", ylab = "DVC",
pch = 19, frame = FALSE,xlim=c(0,200000),ylim=c(0,20))
abline(lm(df_DVC$DVC~ df_DVC$Amount_A, data = summary), col = "blue",lwd=2)
plot(df_DVC$Amount_B, df_DVC$DVC, main = "Amount B road impacting DVC",
xlab = "Amount of B road", ylab = "DVC",
pch = 19, frame = FALSE,xlim=c(0,100000),ylim=c(0,20))
abline(lm(df_DVC$DVC ~ df_DVC$Amount_B, data = summary), col = "blue",lwd=2)
plot(df_DVC$Amount_M, df_DVC$DVC, main = "Amount M road impacting DVC",
xlab = "Amount of M road", ylab = "DVC",
pch = 19, frame = FALSE,xlim=c(0,100000),ylim=c(0,20))
abline(lm(df_DVC$DVC ~ df_DVC$Amount_M, data = summary), col = "blue",lwd=2)
plot(summary$Square_no, summary$DVC.y, main = "DVC in each square",
xlab = "Square number", ylab = "DVC",
pch = 19, frame = FALSE,xlim=c(0,399),ylim=c(0,1300))
plot(df_DVC$Year, df_DVC$DVC, main = "Annual",
xlab = "Year", ylab = "DVC",
pch = 19, frame = FALSE,xlim=c(2008,2018),ylim=c(0,45))
abline(lm(df_DVC$DVC ~ df_DVC$Year, data = summary), col = "blue",lwd=2)
plot(df_DVC$Month, df_DVC$DVC, main = "Seasonality",
xlab = "Month", ylab = "DVC",
pch = 19, frame = FALSE,xlim=c(1,12),ylim=c(0,45))
#or
df_month <- unique(df_DVC[c("Month","Year","DVC")])
df_month <- df_month[!is.na(df_month$DVC), ]
df_month <- df_month %>% group_by(Month,Year) %>% summarize(Avg_DVC = mean(DVC))
ggplot(df_month, aes(x=Month, y=Avg_DVC, colour=Year, group=Year))+ geom_point()+geom_line()+expand_limits(y=0)+ scale_x_continuous(breaks = seq(1,12,1))+ylab("Average number of DVC")
library(plyr)
library(ggplot2)
library(readxl)
library(here)
# library(boot)
# library(carData)
# library(car)
library(tidyverse)
# library(stringr)
library(dplyr)
library(gridExtra)
# library(LogisticDx)
df_DVC <- read_csv("RData/df_DVC.csv")
df_DVC_full <- read_csv("RData/df_DVC.csv")
names(df_DVC)
# df_DVC=subset(df_DVC,select = -c(X1,Square_no,Year,A_traffic_var,B_traffic_var,M_traffic_var,A_var_coefficient, B_var_coefficient))
# df_DVC=subset(df_DVC,select = -c(lon,lat,Land_cover,Percentage_landcover,X_centr,Y_centr))
df_DVC=subset(df_DVC,select = -c(X1,Square_no,A_traffic_var,B_traffic_var,M_traffic_var,A_var_coefficient, B_var_coefficient))
df_DVC=subset(df_DVC,select = -c(lon,lat,Land_cover,Percentage_landcover,X_centr,Y_centr))
df_DVC$DVC[is.na(df_DVC$DVC)] <- 0
# unique(df_DVC_full$Square_no[which(is.na(df_DVC$rainfall))])
f_keep_Climate <- which(!is.na(df_DVC$rainfall)) # no climate data
df_DVC <- df_DVC[f_keep_Climate,]
#
# df_DVC[df_DVC == 0] <- NA
#
# df_DVC[df_DVC == 0.000] <- NA
#
# df_DVC[df_DVC == 0.0000] <- NA
MOD.1 <- glm(DVC ~ Amount_A+Amount_B+Amount_M+sunrise+
sunset+rainfall+Year+
tempmax+tempmin+
A_traffic_pred+B_traffic_pred+M_traffic_pred+
factor(Month),
data = df_DVC, family = "poisson")
summary(MOD.1)
range(df_DVC$Month)
y_hat <- predict(MOD.1, type="response")
y_hat0 <- predict(MOD.1, type="link",se.fit = TRUE)
y_hat2 <- exp(y_hat0$fit)
y_hat2_lower <- exp(y_hat0$fit - 1.96*y_hat0$se.fit)
y_hat2_upper <- exp(y_hat0$fit + 1.96*y_hat0$se.fit)
plot(df_DVC$DVC, y_hat)
plot(df_DVC$DVC, y_hat)
lines(c(0,1e3),c(0,1e3))
# plot(Month, DVC, pch = 16, xlab = "Month", ylab = "DVC")
#
# lines(xMonth, ymonth, col = "red", lwd = 2)
max_DVC <- max(df_DVC$DVC)
fit_mod <- data.frame(observed = seq(0,max_DVC),
median = rep(0,max_DVC+1),
lower = rep(0,max_DVC+1),
upper = rep(0,max_DVC+1),
mean = NA)
for(i in 1:nrow(fit_mod)){
f <- which(df_DVC$DVC == fit_mod$observed[i])
fit_mod[i,2:4] <- quantile(y_hat[f],c(0.5,.025,.975))
fit_mod$mean[i] <- mean(y_hat[f])
}
f <- which(is.na(fit_mod$median))
fit_mod <- fit_mod[-f,]
# plot  observed against the mean across location/months
Hmisc::errbar(x = fit_mod$observed,
y = fit_mod$mean,
yplus = fit_mod$upper,
yminus = fit_mod$lower,
col = 'blue3',bty = 'n',lwd = 1.5,errbar.col = 'blue3',
xlim = c(0,40),ylim = c(0,40))
lines(c(0,50),c(0,50),col='red3',lty=2)
df_DVC$predicted_DVC <- y_hat
df_DVC_full$predicted_DVC <- NA
df_DVC_full$predicted_DVC[f_keep_Climate] <- y_hat
df_DVC$date <- as.Date(paste0('15-',df_DVC$Month,'-',df_DVC$Year),format = '%d-%m-%Y')
View(df_DVC)
unique(df_DVC[c("date","DVC")])
df_date <- unique(df_DVC[c("date","DVC")])
rm(df_date)
# df_date <- unique(df_DVC[c("date","DVC")])
# df_date <- df_date[!is.na(df_date$DVC), ]
df_date <- df_date %>% group_by(Month,Year) %>% summarize(Avg_DVC = mean(DVC))
df_date <- unique(df_DVC[c("date","DVC")])
View(df_date)
df_date <- (df_DVC[c("date","DVC")])
# df_date <- df_date[!is.na(df_date$DVC), ]
df_date <- df_date %>% group_by(date) %>% summarize(Avg_DVC = mean(DVC))
View(df_date)
ggplot(df_date, aes(x=Month, y=Avg_DVC, colour=Year, group=Year))+ geom_point()+geom_line()+expand_limits(y=0)+ scale_x_continuous(breaks = seq(1,12,1))+ylab("Average number of DVC")
ggplot(df_date, aes(x=date, y=Avg_DVC ))+ geom_point()+geom_line()+expand_limits(y=0)+ scale_x_continuous(breaks = seq(1,12,1))+ylab("Average number of DVC")
View(df_date)
df_DVC$date <- as.Date(paste0('15-',df_DVC$Month,'-',df_DVC$Year),format = '%d-%m-%Y')
df_date <- (df_DVC[c("date","DVC")])
# df_date <- df_date[!is.na(df_date$DVC), ]
df_date <- df_date %>% group_by(date) %>% summarize(Avg_DVC = mean(DVC))
ggplot(df_date, aes(x=date, y=Avg_DVC ))+ geom_point()+geom_line()+expand_limits(y=0)+ scale_x_continuous(breaks = seq(1,12,1))+ylab("Average number of DVC")
View(df_date)
df_date$date <- as.Date(df_date$date,format = '%Y-%m-%d')
ggplot(df_date, aes(x=date, y=Avg_DVC ))+ geom_point()+geom_line()+expand_limits(y=0)+ scale_x_continuous(breaks = seq(1,12,1))+ylab("Average number of DVC")
ggplot(df_date, aes(x=date, y=Avg_DVC ))
ggplot(df_date, aes(x=date, y=Avg_DVC ))
ggplot(df_date, aes(x=date, y=Avg_DVC ))+ geom_point()
View(df_DVC)
df_date <- (df_DVC[c("date","DVC",'predicted_DVC')])
# df_date <- df_date[!is.na(df_date$DVC), ]
df_date <- df_date %>% group_by(date) %>% summarize(Avg_DVC = mean(DVC),Avg_pred = mean(predicted_DVC))
ggplot(df_date, aes(x=date, y=Avg_DVC ))+
geom_point()+
geom_line(df_date, aes(x=date, y=Avg_pred ))+
expand_limits(y=0)+ scale_x_continuous(breaks = seq(1,12,1))+ylab("Average number of DVC")
ggplot(df_date, aes(x=date, y=Avg_DVC ))+
geom_point()+
geom_line( aes(x=date, y=Avg_pred ))+
expand_limits(y=0)+ scale_x_continuous(breaks = seq(1,12,1))+ylab("Average number of DVC")
ggplot(df_date, aes(x=date, y=Avg_DVC ))+
geom_point()+
geom_line( aes(x=date, y=Avg_pred ))
library(mgcv)
library(microbenchmark)
library(Rcpp)
library(RcppArmadillo)
library(RcppEigen)
library(dplyr)
# C:\Users\pn211\Dropbox (SPH Imperial College)\chagas-ML\data\Chagas Disease\FOI_final\best
# FoI_ADM2 <-readRDS ("../../../../../Data preparation/ContFoI_Median_ADM2Covariates_2020_ADM2only_Final")
# FoI_ADM2 <-readRDS ("Rdata/COL_Best_Continuous_Model_FullPost_FoI_1000it_ADM2only.RDS")
FoI_ADM2 <-readRDS ("../Data_preparation/Rdata/COL_Best_Continuous_Model_FullPost_FoI_1000it_ADM2only.RDS")
length(unique(FoI_ADM2$dataset_id))
length(unique(FoI_ADM2$GID_2_GDAM))
length(unique(FoI_ADM2$GID_2))
(unique(FoI_ADM2$year))
length(unique(FoI_ADM2$year))
length(unique(FoI_ADM2$GID_2))
length(unique(FoI_ADM2$dataset_id))
setwd("C:/Users/pn211/Dropbox (SPH Imperial College)/chagas-ML/analysis/FoI Linear Regression/Continuous FoI/Scripts/Pierre/prediction_colombia")
setwd('../approach1_2_3/plot_prediction')
`COL-001-01` <- readRDS("C:/Users/pn211/Dropbox (SPH Imperial College)/Final_LM_analyses/Data_preparation/Raw_data/Raw_FoI_1000it/FOI-COL-2021/best/COL-001-01.RDS")
View(`COL-001-01`)
`summary-COL-2021` <- readRDS("C:/Users/pn211/Dropbox (SPH Imperial College)/Final_LM_analyses/Data_preparation/Raw_data/Raw_FoI_1000it/FOI-COL-2021/summary-COL-2021.RDS")
`summary-COL-2021_revised` <- readRDS("C:/Users/pn211/Dropbox (SPH Imperial College)/Final_LM_analyses/Data_preparation/Raw_data/Raw_FoI_1000it/FOI-COL-2021/summary-COL-2021_revised.RDS")
View(`summary-COL-2021`)
getwd()
setwd('../../../../../../../../Final_LM_analyses/Data_preparation/Raw_data/Raw_FoI_1000it/FOI-COL-2021/best')
d <- readRDS('COL-035-18.RDS')
dd <- d$foi_post_1000s
View(dd)
